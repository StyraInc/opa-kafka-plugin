services:
  nginx:
    image: nginx:1.21.4
    volumes:
    - "./bundles:/usr/share/nginx/html"
    ports:
    - "80:80"
  opa:
    image: openpolicyagent/opa:{{< current_docker_version >}}-rootless
    ports:
    - "8181:8181"
    command:
    - "run"
    - "--server"
    - "--set=decision_logs.console=true"
    - "--set=services.authz.url=http://nginx"
    - "--set=bundles.authz.service=authz"
    - "--set=bundles.authz.resource=bundle.tar.gz"
    depends_on:
    - nginx
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.1
    ports:
    - "2181:2181"
    environment:
    - ALLOW_ANONYMOUS_LOGIN=yes
    - ZOOKEEPER_CLIENT_PORT=2181
  broker:
    ports:
    - "9093:9093"
    environment:
      # Set cache expiry to low value for development in order to see decisions
      KAFKA_OPA_AUTHORIZER_CACHE_EXPIRE_AFTER_SECONDS: 10
      KAFKA_OPA_AUTHORIZER_URL: http://opa:8181/v1/data/kafka/authz/allow
      KAFKA_AUTHORIZER_CLASS_NAME: org.openpolicyagent.kafka.OpaAuthorizer
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: SSL://localhost:9093
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SSL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_SSL_KEYSTORE_FILENAME: server.keystore
      KAFKA_SSL_KEYSTORE_CREDENTIALS: credentials.txt
      KAFKA_SSL_KEY_CREDENTIALS: credentials.txt
      KAFKA_SSL_TRUSTSTORE_FILENAME: server.truststore
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: credentials.txt
      KAFKA_SSL_CLIENT_AUTH: required
      CLASSPATH: "/plugin/*"
    volumes:
    - "./plugin:/plugin"
    - "./cert/server:/etc/kafka/secrets"
    depends_on:
    - opa
    - zookeeper